1、new directory
2、git init 初始化目录为git可以管理的仓库
3、把文件添加到版本库
	把文件添加到仓库
	git add readme.txt<file> 可反复使用
	把文件提交到仓库
	git commit -m "本次提交的说明"
修改文件
4、git status 查看仓库当前状态
5、git diff 查看修改点	
6、4 5 循环使用
	随时掌握工作区状态 git status
	git 
版本回退
7、 git log  历史记录
	git log --pretty=oneline
	commit id  SHA1计算出来的一个非常大的数字，用十六进制表示
	
8、git reset --hard HEAD^ 上一版本
	git reset --hard HEAD^^ 上上版本
	git reset --hard HEAD~100 上100版本
	
    git reset --hard  commitid（5位）
9、git reflog 记录每次的命令
	查看历史命令
	
工作区
	working directory  learngit
版本库
	repository
	stage 暂存区 git add 
	master 分支   git commit
管理修改
	Git 优秀的原因管理的是修改而不是文件
	
撤销修改
	git checkout -- readme.txt(撤销的文件名)
	三种情况
	场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

	场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

	场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库
删除文件
	rm file
远程仓库
	1、创建SSH Key
	ssh-keygen -t rsa -C "emailaddress"
	2、添加到github账号中
添加远程库
	1、本地和远程库关联
	git remote add origin git@github:username/filename.git
	2、本地库所有文件推送到远程库
	git push -u origin master
    3、 
	git push origin master 
	